/*
Tigger
automatiza um eventos que sao disparados em tabela ou view

//tipo de evento que disparado
(INSERT, UPDATE, DELETE)
-- OCORRENCIA
	* FOR (PADRAO)
	* AFTER (ESPERA O EVENTO ACABAR PARA INICIAR O SCRIPT)
	* INSTEAD OF (EXECUTA ANTES DO EVENTO TERMINAR)
*/
-- INSERIR NA TABELA PEDIDO VALOR
-- PADRAO(INICIO)

INSERT INTO TB_PEDIDO
(COD_CLI, VALOR_PED, DATA_PED)
VALUES(1, 0, GETDATE());
GO

DROP TRIGGER TRG_PEDIDO;

DECLARE @ID INT;

--PEGAR AUTOMATICAMENTE O IDSELECT

SELECT @ID = SCOPE_IDENTITY();

INSERT INTO TB_ITENS_PED (
	N_PED,
	COD_LIV,
	QTD_ITEM
)
VALUES (@ID,2, 2),
	   (@ID, 4, 1

DELETE FROM TB_ITENS_PED;

--INSERIR ITENS PEDIDO
INSERT INTO TB_ITENS_PED
(N_PED, COD_LIV, QTD_ITEM)
VALUES(1, 2, 2),
	  (1, 4, 1);
GO

-- CRIA UMA TABELA TEMPORARIA INSERTED
-- DELETE, UPDATE TABELA TMP DELETED
-- COMANDO

CREATE TRIGGER TRG_PEDIDO
ON TB_ITENS_PED
AFTER INSERT
	AS
	BEGIN
		DECLARE @TOTAL DECIMAL(10,2),
				@N_PED INT;
--DECLARE @QTD INT;
		-- PEGAR O REGISTRO DA TABELA TMP INSERTED QUANDO INSERIDO

		SELECT @N_PED = @N_PED FROM inserted

		-- PEGAR A QTD DE PRODUTOS , VALOR E SOMAR O TOTAL
		
SELECT @TOTAL =SUM(TB_LIVRO.PRECO_LIV * TB_ITENS_PED.QTD_ITEM)
		FROM TB_LIVRO INNER JOIN TB_ITENS_PED
		ON TB_LIVRO.COD_LIV = TB_ITENS_PED.COD_LIV
		WHERE TB_ITENS_PED.N_PED = @N_PED;

--SELECT @QTD = SUM(QTD_ITEM) 
--FROM TB_ITENS_PED 
--WHERE N_PED = 1;

		UPDATE TB_PEDIDO
		SET VALOR_PED = @TOTAL
		WHERE N_PED = @N_PED;
	END
GO